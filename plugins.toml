####################
# Initial ##########
####################

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'hecal3/vim-leader-guide'
name = 'leader-guide'

[[plugins]]
repo = 'dbakker/vim-projectroot'
name = 'projectroot'
hook_add = '''
let g:rootmarkers=g:root_markers
'''

####################
# C/C++ ############
####################

[[plugins]]
repo = 'vim-scripts/DoxygenToolkit.vim'
name = 'doxygen-toolkit'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'derekwyatt/vim-fswitch'
name = 'fswitch'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'drmikehenry/vim-headerguard'
name = 'headerguard'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'octol/vim-cpp-enhanced-highlight'
name = 'cpp-enhanced-hightlight'
on_ft = ['c', 'cpp']
hook_add = '''
let g:cpp_class_scope_highlight = 1
let g:cpp_member_variable_highlight = 1
let g:cpp_class_decl_highlight = 1
let g:cpp_experimental_simple_template_highlight = 1
let g:cpp_experimental_template_highlight = 0
let g:cpp_concepts_highlight = 1
let g:cpp_no_function_highlight = 0
'''

######################
# Elixir #############
######################

[[plugins]]
repo = 'elixir-editors/vim-elixir'
name = 'elixir'
on_ft = ['elixir', 'eelixir']

####################
# Python ###########
####################

[[plugins]]
repo = 'python-mode/python-mode'
on_ft = ['python']

[[plugins]]
repo = 'jmcantrell/vim-virtualenv'
name = 'python-virtualenv'
on_ft = ['python']
on_if = "!empty($VIRTUAL_ENV)"

[[plugins]]
repo = 'heavenshell/vim-pydocstring'
name = 'pydocstring'
on_ft = ['python']

[[plugins]]
repo = 'tweekmonster/django-plus.vim'
name = 'django'

[[plugins]]
repo = 'davidhalter/jedi-vim'
name = 'jedi'
on_ft = ['python']

[[plugins]]
repo = 'mgedmin/python-imports.vim'
name = 'python-imports'
on_ft = ['python']

[[plugins]]
repo = 'lepture/vim-jinja'
name = 'jinja'
on_ft = ['jinja']

####################
# Go ###############
####################

[[plugins]]
repo = 'fatih/vim-go'
name = 'go'
on_cmd = ['GoInstallBinaries', 'GoUpdateBinaries']
on_ft = ['go', 'gohtmltmpl']

#########################
# html ##################
#########################

[[plugins]]
repo = 'mattn/emmet-vim'
name = 'emmet'
on_ft = ['html', 'javascript', 'javascript.jsx', 'jinja', 'gohtmltmpl', 'eelixir', 'htmldjango']

[[plugins]]
repo = 'alvan/vim-closetag'
name = 'closetag'
hook_add = '''
let g:closetag_filenames="*.html,*.php,*.xhtml,*.xml,*.jsx,*.js,*.hbs,*.handlebars,*.jinja,*.tsx,*.vue,*.tmpl,*.erb,*.html.eex, *.html.leex"
let g:closetag_shortcut='>'
let g:closetag_close_shortcut='<C-x>.'
'''

[[plugins]]
repo = 'othree/html5.vim'
name = 'html5'
on_ft = ['html']

#####################
# css ###############
#####################

[[plugins]]
repo = 'cakebaker/scss-syntax.vim'
name = 'scss'
on_ft = ['scss']

#######################################
# javascript/typescript ###############
#######################################

[[plugins]]
repo = 'jaawerth/nrun.vim'
name = 'nrun'
# on_func = ['nrun#Which']

[[plugins]]
repo = 'dunckr/js_alternate.vim'
name = 'js-alternate'
on_func = ['js_alternate#run']
hook_add = '''
let g:js_alternate#src_types = ['lib', 'src', 'app', 'scripts', 'js', 'javascript', 'frontend']
let g:js_alternate#test_types = ['tests', 'test', 'spec', 'features']
let g:js_alternate#extension_types = ['js', 'jsx', 'coffee', 'ts', 'elm', 'purs']
'''

[[plugins]]
repo = 'heavenshell/vim-jsdoc'
name = 'jsdoc'
on_cmd = ['JsDoc']

[[plugins]]
repo = 'ternjs/tern_for_vim'
name = 'ternjs'
if = 'executable("tern")'
on_ft = ['javascript', 'javascript.jsx']
build = 'npm install'

[[plugins]]
repo = 'jparise/vim-graphql'
name = 'graphql'

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
name = 'javascript-libraries-syntax'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'pangloss/vim-javascript'
name = 'javascript'
on_ft = ['javascript', 'javascript.jsx']
hook_add = '''
let g:javascript_plugin_jsdoc=1
let g:javascript_plugin_ngdoc=1
let g:javascript_plugin_flow=1
'''

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
name = 'jsx'

[[plugins]]
repo = 'elzr/vim-json'
name = 'json'
on_ft = ['json']
hook_add = '''
let g:vim_json_syntax_conceal=0
'''

[[plugins]]
repo = 'bdauria/angular-cli.vim'
name = 'angular-cli'
hook_add = '''
let g:angular_cli_stylesheet_format="scss"
'''

[[plugins]]
repo = 'leafgarland/typescript-vim'
name = 'typescript'
on_ft = ['typescript']

[[plugins]]
repo = 'posva/vim-vue'
name = 'vue'

####################
# TOML #############
####################

[[plugins]]
repo = 'cespare/vim-toml'
name = 'toml'
on_ft = ['toml']

####################
# Project ##########
####################

[[plugins]]
repo = 'tpope/vim-projectionist'
name = 'projectionist'

[[plugins]]
repo = 'embear/vim-localvimrc'
name = 'localvimrc'
on_cmd = ['LocalVimRC', 'LocalVimRCClear']
on_if = 'filereadable(expand(projectroot#guess() . "/.lvimrc"))'
hook_add = '''
let g:localvimrc_name=".lvimrc"
let g:localvimrc_event=["BufWinEnter", "BufNewFile", "BufRead"]
let g:localvimrc_persistent=2
let g:localvimrc_persistence_file=$EDITOR_ROOT . "/.localvimrc_persistent"
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
name = 'editorconfig'
on_if = 'filereadable(expand(projectroot#guess() . "/.editorconfig"))'
hook_add = '''
let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
'''

####################
# Tags #############
####################

[[plugins]]
repo = 'ludovicchabant/vim-gutentags'
name = 'gutentags'
if = 'executable("ctags")'

[[plugins]]
repo = 'majutsushi/tagbar'
if = 'executable("ctags")'
on_cmd = ['TagbarToggle']


#######################
# navigation ##########
#######################

[[plugins]]
repo = 'brooth/far.vim'
name = 'far'

[[plugins]]
repo = 'scrooloose/nerdtree'
on_cmd = ['NERDTreeToggle', 'NERDTreeFind']
augroup = "FileExplorer"

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
name = 'nerdtree-git'
on_source = 'nerdtree'
depends = 'nerdtree'

###############
# Git #########
###############

[[plugins]]
repo = 'rhysd/committia.vim'
name = 'committia'
on_path = "COMMIT_EDITMSG"

[[plugins]]
repo = 'tpope/vim-fugitive'
name = 'fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'
name = 'gitgutter'
hook_add = '''
let g:gitgutter_map_keys=0
'''

####################
# Checkers #########
####################

# [[plugins]]
# repo = 'neomake/neomake'
#
# [[plugins]]
# repo = 'sinetoami/lightline-neomake'
# depends = 'neomake'

####################
# Format ###########
####################

[[plugins]]
repo = 'godlygeek/tabular'
on_cmd = ['Tabularize']

####################
# Completion #######
####################

[[plugins]]
repo = 'neoclide/coc.nvim'
merge = 0
build = './install.sh nightly'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

####################
# Tests ############
####################

[[plugins]]
repo = 'janko/vim-test'

####################
# Vim Extensions ###
####################

[[plugins]]
repo = 'Konfekt/FastFold'
name = 'fast-fold'

[[plugins]]
repo = 'tpope/vim-surround'
name = 'surround'

[[plugins]]
repo = 'tpope/vim-repeat'
name = 'repeat'

[[plugins]]
repo = 'vim-scripts/YankRing.vim'
name = 'yankring'
hook_add = '''
let g:yankring_history_dir=$EDITOR_ROOT . '/.cache'
let g:yankring_history_file='yankring'
let g:yankring_clipboard_monitor=0
'''

[[plugins]]
repo = 'tomtom/tcomment_vim'
name = 'tcomment'
hook_add = '''
let g:tcomment_mapleader1=''
let g:tcomment_mapleader2=''
'''

####################
# UI ###############
####################

[[plugins]]
repo = 'gcmt/taboo.vim'
name = 'taboo'
hook_add = '''
let g:taboo_tabline=1
let g:taboo_tab_format='[%N]%f%m'
'''

[[plugins]]
repo = 'lilydjwg/colorizer'
hook_add = '''
let g:colorizer_nomap=1
'''

[[plugins]]
repo = 'nanotech/jellybeans.vim'
name = 'jellybeans'

[[plugins]]
repo = 'itchyny/lightline.vim'
name = 'lightline'

####################
# Extra ############
####################

[[plugins]]
repo = 'sbdchd/vim-shebang'
name = 'shebang'
on_cmd = ['ShebangInsert']

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
name = 'tmux-navigator'

[[plugins]]
repo = 'jpalardy/vim-slime'
name = 'slime'
on_if = 'exists("$TMUX")'
hook_add = '''
let g:slime_target='tmux'
let g:slime_paste_file=$EDITOR_ROOT . '/.slime_paste'
let g:slime_default_config={'socket_name': 'default', 'target_pane': '1.2'}
let g:slime_python_ipython=1
'''
